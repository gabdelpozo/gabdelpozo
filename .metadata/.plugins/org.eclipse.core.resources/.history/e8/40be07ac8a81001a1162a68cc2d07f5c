/*
 * utn_new.c
 *
 *  Created on: 17 abr. 2020
 *      Author: gabriel
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

static int esNumerica(char* cadena);
static int getInt(int *pResultado);
static int myGets(char* cadena, int longitud);
int utn_getNumero(int* pResultado, char* mensaje, char* mensajeError, int minimo, int maximo, int reintentos);

/*
 *\brief
 *\param pResultado puntero al espacio de memoria donde se dejara el resultado de la funcion
 *\return retorna 0(exito) si se obtiene una cadena y -1(error) si no.
 *
 */
static int getInt(int *pResultado)
{
	int retorno=-1;
	char buffer[4096];
	scanf("%s",buffer);
	if(esNumerica(buffer))
	{
		retorno = 0;
		*pResultado = atoi(buffer);
	}

	return retorno;
}
/*
 *\brief Lee de stdin hasta que encuentra un '\n' o hasta que haya copiado en cadena
 *	     un maximo de 'longitud -1' caracteres.
 *\param pResultado puntero al espacio de memoria donde se copiara la cadena obtenida
 *\param longitud define el tamaÃ±o de cadena
 *\return retorna 0(exito) si se obtiene una cadena y -1(error) si no.
 *
 */

static int myGets(char* cadena, int longitud);
{
	return -1;
}

/*
 *\brief Verifica si la cadena ingresada es numerica
 *\param cadena Cadena de caracteres a ser analizada
 *\return retorna 1 (verdadero) si la cadena es numerica y 0 (falso) si no lo es
 *
 */

static int esNumerica(char* cadena)
{
	int retorno = 0;
	int i;

	if(cadena[0] == '-')
	{
		i = 1;
	}

	else
	{
		i = 0;
	}

	for(i=0 ; cadena[i] != '\0' ; i++)
	{
		if(cadena[i] > '9' || cadena[i] < '0')
		{
			retorno = 0;
			break;
		}
	}

	return retorno;
}
/*
 *\brief Solicita un numero al usuario, luego de verificarlo devuelve el resultado
 *\param pResultado Puntero al espacio de memoria donde se dejara elresultado de la
 *			funcion
 *\param mensaje Es el mensaje a ser mostrado
 *\param mensajeError Es el mensaje de Error a ser mostrado
 *\param minimo Es el numero minimo a ser aceptado
 *\param maximo Es el numero maximo a ser aceptado
 *\return Retorna 0 si se obtuvo el numero y -1 si no
 */

int utn_getNumero(int* pResultado, char* mensaje, char* mensajeError, int minimo, int maximo, int reintentos)
{
	int retorno = -1;
	int buffer;

	if(pResultado != NULL && mensaje != NULL && mensajeError != NULL && minimo <= maximo && reintentos >= 0)
	{
		do
		{
			printf("%s",mensaje);
			//scanf("%d",&buffer);
			getInt(&buffer)
			if(buffer >= minimo && buffer <= maximo)
			{
				*pResultado = buffer;
				retorno = 0;
				break;
			}
			reintentos--;
		}while(reintentos >= 0);
	}
	return retorno;
}
